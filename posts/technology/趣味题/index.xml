<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>所有文章 - Vee&#39;s space</title>
        <link>https://vee-zhang.github.io/posts/technology/%E8%B6%A3%E5%91%B3%E9%A2%98/</link>
        <description>所有文章 | Vee&#39;s space</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>vee.night@qq.com (Vee Zhang)</managingEditor>
            <webMaster>vee.night@qq.com (Vee Zhang)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 12 May 2022 22:28:56 &#43;0800</lastBuildDate><atom:link href="https://vee-zhang.github.io/posts/technology/%E8%B6%A3%E5%91%B3%E9%A2%98/" rel="self" type="application/rss+xml" /><item>
    <title>大数据量取top</title>
    <link>https://vee-zhang.github.io/%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%87%8F%E5%8F%96top/</link>
    <pubDate>Thu, 12 May 2022 22:28:56 &#43;0800</pubDate><author>
        <name>Vee Zhang</name>
    </author><guid>https://vee-zhang.github.io/%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%87%8F%E5%8F%96top/</guid>
    <description><![CDATA[<p>一个无限大的文件，里面包函大量的数据，需求是从中取出top50。</p>]]></description>
</item><item>
    <title>单向链找倒数第N个节点</title>
    <link>https://vee-zhang.github.io/%E5%8D%95%E5%90%91%E9%93%BE%E6%89%BE%E5%80%92%E6%95%B0%E7%AC%ACn%E4%B8%AA%E8%8A%82%E7%82%B9/</link>
    <pubDate>Thu, 24 Mar 2022 20:26:52 &#43;0800</pubDate><author>
        <name>Vee Zhang</name>
    </author><guid>https://vee-zhang.github.io/%E5%8D%95%E5%90%91%E9%93%BE%E6%89%BE%E5%80%92%E6%95%B0%E7%AC%ACn%E4%B8%AA%E8%8A%82%E7%82%B9/</guid>
    <description><![CDATA[<p>假设有个单向链，我们并不知道长度，要求找到倒数的第N个节点。</p>]]></description>
</item><item>
    <title>Java趣味题</title>
    <link>https://vee-zhang.github.io/java%E8%B6%A3%E5%91%B3%E9%A2%98/</link>
    <pubDate>Tue, 12 Jan 2021 17:49:10 &#43;0000</pubDate><author>
        <name>Vee Zhang</name>
    </author><guid>https://vee-zhang.github.io/java%E8%B6%A3%E5%91%B3%E9%A2%98/</guid>
    <description><![CDATA[java是引用传递还是值传递？ 结论，Java就是值传递，只不过在传递引用类型的时候，会把对象的引用地址当作值来传递。 首先声明一个引用类型： 1]]></description>
</item></channel>
</rss>
