<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>所有文章 - Vee&#39;s space</title>
        <link>https://vee-zhang.github.io/posts/technology/flutter/</link>
        <description>所有文章 | Vee&#39;s space</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>vee.night@qq.com (Vee Zhang)</managingEditor>
            <webMaster>vee.night@qq.com (Vee Zhang)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><atom:link href="https://vee-zhang.github.io/posts/technology/flutter/" rel="self" type="application/rss+xml" /><item>
    <title>Flutter异常监控</title>
    <link>https://vee-zhang.github.io/flutter%E5%BC%82%E5%B8%B8%E7%9B%91%E6%8E%A7/</link>
    <pubDate>Wed, 20 Apr 2022 14:06:58 &#43;0800</pubDate><author>
        <name>Vee Zhang</name>
    </author><guid>https://vee-zhang.github.io/flutter%E5%BC%82%E5%B8%B8%E7%9B%91%E6%8E%A7/</guid>
    <description><![CDATA[]]></description>
</item><item>
    <title>Flutter 模块、包和插件(待续...)</title>
    <link>https://vee-zhang.github.io/flutter-%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91/</link>
    <pubDate>Fri, 23 Jul 2021 16:23:52 &#43;0800</pubDate><author>
        <name>Vee Zhang</name>
    </author><guid>https://vee-zhang.github.io/flutter-%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91/</guid>
    <description><![CDATA[]]></description>
</item><item>
    <title>Flutter的生命周期函数</title>
    <link>https://vee-zhang.github.io/flutter-%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%87%BD%E6%95%B0/</link>
    <pubDate>Fri, 23 Jul 2021 14:32:39 &#43;0800</pubDate><author>
        <name>Vee Zhang</name>
    </author><guid>https://vee-zhang.github.io/flutter-%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E5%87%BD%E6%95%B0/</guid>
    <description><![CDATA[]]></description>
</item><item>
    <title>Dart-Future和Stream</title>
    <link>https://vee-zhang.github.io/dart-future%E5%92%8Cstream/</link>
    <pubDate>Wed, 21 Jul 2021 17:52:47 &#43;0800</pubDate><author>
        <name>Vee Zhang</name>
    </author><guid>https://vee-zhang.github.io/dart-future%E5%92%8Cstream/</guid>
    <description><![CDATA[]]></description>
</item><item>
    <title>Dart-任务队列</title>
    <link>https://vee-zhang.github.io/dart-%E4%BB%BB%E5%8A%A1%E9%98%9F%E5%88%97/</link>
    <pubDate>Wed, 21 Jul 2021 17:23:36 &#43;0800</pubDate><author>
        <name>Vee Zhang</name>
    </author><guid>https://vee-zhang.github.io/dart-%E4%BB%BB%E5%8A%A1%E9%98%9F%E5%88%97/</guid>
    <description><![CDATA[]]></description>
</item><item>
    <title>搭建pub私服及上传package</title>
    <link>https://vee-zhang.github.io/%E6%90%AD%E5%BB%BApub%E7%A7%81%E6%9C%8D%E5%8F%8A%E4%B8%8A%E4%BC%A0package/</link>
    <pubDate>Thu, 15 Jul 2021 14:13:55 &#43;0800</pubDate><author>
        <name>Vee Zhang</name>
    </author><guid>https://vee-zhang.github.io/%E6%90%AD%E5%BB%BApub%E7%A7%81%E6%9C%8D%E5%8F%8A%E4%B8%8A%E4%BC%A0package/</guid>
    <description><![CDATA[<p>事情的起因是，在工作项目中，一开始只有我一个人研发，为了方便，我封装了一个网络访问层。但是随着团队规模的拓展，陆续加入了其他人，时间紧项目重，所以后续的伙伴没有时间来问我这个框架怎么使用，所以他们直接上手改了我的封装！但是后期架构要求加入oauth2.0机制，所以需要全局处理token的有效认证，并且自动刷新token。为了满足这一需求，我需要重新编写网络层，同时为了避免伙伴修改我的抽象，我想到了本文的主题——搭建个pub.dev私服吧！</p>]]></description>
</item><item>
    <title>FlutterJsonBeanFactory原理</title>
    <link>https://vee-zhang.github.io/flutterjsonbeanfactory%E5%8E%9F%E7%90%86/</link>
    <pubDate>Fri, 25 Jun 2021 16:57:01 &#43;0000</pubDate><author>
        <name>Vee Zhang</name>
    </author><guid>https://vee-zhang.github.io/flutterjsonbeanfactory%E5%8E%9F%E7%90%86/</guid>
    <description><![CDATA[创建类 1 2 3 4 5 class StudentEntity with JsonConvert&lt;StudentEntity&gt; { @JSONField(name: &#34;name&#34;) late String name; } 使用 1 2 3 4 5 6 7 8 9 10 11 //序列化 Map&lt;String, dynamic&gt; json = StudentEntity(name: &#34;走两步试试&#34;).toJson(); //]]></description>
</item></channel>
</rss>
