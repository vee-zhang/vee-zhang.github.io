<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Java - 标签 - Vee&#39;s space</title>
        <link>https://vee-zhang.github.io/tags/java/</link>
        <description>Java - 标签 - Vee&#39;s space</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>vee.night@qq.com (Vee Zhang)</managingEditor>
            <webMaster>vee.night@qq.com (Vee Zhang)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 08 Jul 2021 17:49:10 &#43;0000</lastBuildDate><atom:link href="https://vee-zhang.github.io/tags/java/" rel="self" type="application/rss+xml" /><item>
    <title>ClassLoader学习.md</title>
    <link>https://vee-zhang.github.io/classloader%E5%AD%A6%E4%B9%A0/</link>
    <pubDate>Thu, 08 Jul 2021 17:49:10 &#43;0000</pubDate><author>
        <name>Vee Zhang</name>
    </author><guid>https://vee-zhang.github.io/classloader%E5%AD%A6%E4%B9%A0/</guid>
    <description><![CDATA[用途 读取.class文件的字节码并加载成内存形式的类对象。 边解释边执行 JVM并不是一次性加载全部的类，而是需要用到才会去加载。比如加载了类，]]></description>
</item><item>
    <title>HashMap速记</title>
    <link>https://vee-zhang.github.io/hashmap%E9%80%9F%E8%AE%B0/</link>
    <pubDate>Tue, 12 Jan 2021 17:49:10 &#43;0000</pubDate><author>
        <name>Vee Zhang</name>
    </author><guid>https://vee-zhang.github.io/hashmap%E9%80%9F%E8%AE%B0/</guid>
    <description><![CDATA[版本差异 版本 特点 JDK1.7 数组+单向链 JDK1.8 数组+单向链+红黑树 jdk1.7中，数组是HashMap的主体，而链表是为了解决哈希冲突而存在的。当链表过长]]></description>
</item><item>
    <title>Java的GC机制</title>
    <link>https://vee-zhang.github.io/java%E7%9A%84gc%E6%9C%BA%E5%88%B6/</link>
    <pubDate>Tue, 12 Jan 2021 17:49:10 &#43;0000</pubDate><author>
        <name>Vee Zhang</name>
    </author><guid>https://vee-zhang.github.io/java%E7%9A%84gc%E6%9C%BA%E5%88%B6/</guid>
    <description><![CDATA[由于我对GC的理解一直不好，总是记不住，所以本篇博客完全撸了一颗苹果的博客,十分感谢原作者！ 什么是垃圾 Java进程运行后，如果某个类型(方法]]></description>
</item><item>
    <title>Java趣味题</title>
    <link>https://vee-zhang.github.io/java%E8%B6%A3%E5%91%B3%E9%A2%98/</link>
    <pubDate>Tue, 12 Jan 2021 17:49:10 &#43;0000</pubDate><author>
        <name>Vee Zhang</name>
    </author><guid>https://vee-zhang.github.io/java%E8%B6%A3%E5%91%B3%E9%A2%98/</guid>
    <description><![CDATA[java是引用传递还是值传递？ 结论，Java就是值传递，只不过在传递引用类型的时候，会把对象的引用地址当作值来传递。 首先声明一个引用类型： 1]]></description>
</item><item>
    <title>CAS原理和问题</title>
    <link>https://vee-zhang.github.io/cas/</link>
    <pubDate>Thu, 07 Jan 2021 16:30:36 &#43;0000</pubDate><author>
        <name>Vee Zhang</name>
    </author><guid>https://vee-zhang.github.io/cas/</guid>
    <description><![CDATA[死锁 死锁是指多个的线程在执行过程中，由于竞争资源或者由于批次通信而造成的一种阻塞现象。若无外力作用，他们都将无法推进下去。 悲观锁与乐观锁 悲观]]></description>
</item><item>
    <title>synchornized关键字</title>
    <link>https://vee-zhang.github.io/synchornized%E5%85%B3%E9%94%AE%E5%AD%97/</link>
    <pubDate>Wed, 06 Jan 2021 16:57:01 &#43;0000</pubDate><author>
        <name>Vee Zhang</name>
    </author><guid>https://vee-zhang.github.io/synchornized%E5%85%B3%E9%94%AE%E5%AD%97/</guid>
    <description><![CDATA[反编译指令 1 javap -v XXX.class 监视器对象Monitor 原理 当synchronized加载代码块上，JVM会执行两条指令： 加锁：MonitorEnter 解]]></description>
</item></channel>
</rss>
