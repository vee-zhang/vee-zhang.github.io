<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>MessageQueue on Vee's space</title><link>https://vee-zhang.github.io/tags/messagequeue/</link><description>Recent content in MessageQueue on Vee's space</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>vee.night@qq.com (Vee Zhang)</managingEditor><webMaster>vee.night@qq.com (Vee Zhang)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 04 Mar 2021 20:01:35 +0000</lastBuildDate><atom:link href="https://vee-zhang.github.io/tags/messagequeue/index.xml" rel="self" type="application/rss+xml"/><item><title>MessageQueue解读</title><link>https://vee-zhang.github.io/messagequeue%E8%A7%A3%E8%AF%BB/</link><pubDate>Thu, 04 Mar 2021 20:01:35 +0000</pubDate><author>vee.night@qq.com (Vee Zhang)</author><guid>https://vee-zhang.github.io/messagequeue%E8%A7%A3%E8%AF%BB/</guid><description>回顾 handler发送消息： 1 2 3 4 5 6 7 8 9 10 private boolean enqueueMessage(@NonNull MessageQueue queue, @NonNull Message msg, long uptimeMillis) { msg.target = this; msg.workSourceUid = ThreadLocalWorkSource.getUid(); if (mAsynchronous) { msg.setAsynchronous(true); } return queue.enqueueMessage(msg, uptimeMillis);//最后调用的是</description></item></channel></rss>